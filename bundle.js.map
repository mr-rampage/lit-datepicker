{"version":3,"file":"bundle.js","sources":["../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../src/components/utils.ts","../node_modules/tslib/tslib.es6.js","../node_modules/lit-html/directives/class-map.js","../src/lib/calendar.ts","../src/components/uikit-calendar.ts","../src/components/day.ts","../src/components/month.ts","../src/components/year.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","export const getLanguage = (): string => window.navigator.languages ? window.navigator.languages[0] : window.navigator['userLanguage'] || window.navigator.language;\n\nexport function isSame(previous: Date, next: Date) {\n  return previous !== null &&\n    previous.getUTCFullYear() === next.getUTCFullYear() && \n    previous.getUTCMonth() === next.getUTCMonth() && \n    previous.getUTCDate() === next.getUTCDate();\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","export const calendar = (date: Date): Date[] => recurseUntil(isEndOfCalendar(date), sundayOfWeek(firstOfMonth(date)));\n\nexport const groupByWeek = (calendar: Date[]): Date[][] => calendar.reduce((weeks, date, index) => {\n    if (index % 7 === 0) {\n      weeks.push([])\n    }\n    weeks[Math.floor(index / 7)].push(date);\n    return weeks;\n  }, []);\n\nconst recurseUntil = (done: (date: Date) => boolean, startDate: Date, ...previousDates: Date[]): Date[] => \n  done(startDate) ? previousDates : recurseUntil(done, tomorrow(startDate), ...previousDates, startDate);\n\nconst isEndOfCalendar = (targetDate: Date) => (date: Date) =>\n  isSunday(date) && date.getUTCMonth() !== targetDate.getUTCMonth() && date > targetDate;\n\nconst isSunday = (date: Date) => date.getUTCDay() === 0;\n\nconst firstOfMonth = (date: Date) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1);\nconst sundayOfWeek = (date: Date) => addDays(-date.getUTCDay(), date);\nconst tomorrow = (date: Date) => addDays(1, date);\n\nconst addDays = (days: number, date: Date) => new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate() + days);","import { html } from 'lit-html';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { day } from './day';\nimport { month } from './month';\nimport { year } from './year';\nimport { calendar as getDates, groupByWeek } from '../lib/calendar';\nimport { CalendarEvents } from '.';\nimport { isSame } from './utils';\n\nconst dateClasses = {\n  'uk-button': true,\n  'uk-button-default': true,\n  'uk-padding-remove-horizontal': true\n};\n\nconst gridClasses = {\n  'uk-grid-small': true,\n  'uk-child-width-expand': true,\n  'uk-grid-row-collapse': true,\n  'uk-grid-column-collapse': true\n}\n\nexport const calendar = (events: CalendarEvents) => {\n  const dayPicker = day(events.onDaySelected)\n  const monthPicker = month(events.onMonthChanged);\n  const yearPicker = year(events.onYearChanged);\n\n  return (currentDate: Date = new Date(), selectedDate: Date = new Date()) => {\n    const dates = getDates(currentDate);\n    const getDayClasses = dayClasses(currentDate, selectedDate, dateClasses);\n\n    return html`\n      <div class=\"uk-container\">\n        <div class=${classMap(gridClasses)} data-uk-grid>${yearPicker({ date: currentDate, classes: dateClasses })}</div>\n        <div class=${classMap(gridClasses)} data-uk-grid>${monthPicker({ date: currentDate, classes: dateClasses })}</div>\n        ${groupByWeek(dates).map(\n            days => html`\n              <div class=${classMap(gridClasses)} data-uk-grid>\n                ${days.map(day => dayPicker({date: day, classes: getDayClasses(day)}))}\n              </div>`\n        )}\n      </div>`\n  };\n}\n\nfunction dayClasses(currentDate: Date, selectedDate: Date, dateClasses: any) {\n  return (day: Date) => {\n    return ({\n      'uk-button-primary': isSame(day, selectedDate), \n      'uk-button-secondary': day.getMonth() !== currentDate.getMonth() && !isSame(day, selectedDate) && !isSame(day, new Date()),\n      'uk-button-danger': isSame(day, new Date()) && !isSame(new Date(), selectedDate),\n      ...dateClasses\n    })\n  }\n}","import { html } from 'lit-html';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { CalendarEvent } from '.';\n\nexport type DateProps = {\n  date: Date,\n  classes?: any,\n};\n\nexport const day = (onDatePicked: CalendarEvent) => ({date, classes = {}}: DateProps) => html`\n    <button class=${classMap(classes)} @click=${(e: Event) => onDatePicked(e, date)}>${date.getDate()}</button>\n  `;","import { html, TemplateResult } from 'lit-html';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { DateProps } from './day';\nimport { CalendarEvent } from '.';\nimport { getLanguage } from './utils';\n\nexport const month = (onMonthPicked: CalendarEvent) => ({date, classes = {}}: DateProps): TemplateResult => {\n  const lastMonth = new Date(date.getFullYear(), date.getMonth() - 1);\n  const nextMonth = new Date(date.getFullYear(), date.getMonth() + 1);\n  const formatter = new Intl.DateTimeFormat(getLanguage(), { month: 'long' });\n  return html`\n    <button class=${classMap(classes)} @click=${(e: Event) => onMonthPicked(e, lastMonth)}>${formatter.format(lastMonth)}</button>\n    <span class=${classMap(classes)}>${formatter.format(date)}</span>\n    <button class=${classMap(classes)} @click=${(e: Event) => onMonthPicked(e, nextMonth)}>${formatter.format(nextMonth)}</button>\n  `;\n}\n","import { html, TemplateResult } from 'lit-html';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { DateProps } from './day';\nimport { CalendarEvent } from '.';\nimport { getLanguage } from './utils';\n\nexport const year = (onYearPicked: CalendarEvent) => ({date, classes = {}}: DateProps): TemplateResult => {\n  const lastYear = new Date(date.getFullYear() - 1, date.getMonth());\n  const nextYear = new Date(date.getFullYear() + 1, date.getMonth());\n  const formatter = new Intl.DateTimeFormat(getLanguage(), { year: 'numeric' });\n  return html`\n    <button class=${classMap(classes)} @click=${(e: Event) => onYearPicked(e, lastYear)}>${formatter.format(lastYear)}</button>\n    <span class=${classMap(classes)}>${formatter.format(date)}</span>\n    <button class=${classMap(classes)} @click=${(e: Event) => onYearPicked(e, nextYear)}>${formatter.format(nextYear)}</button>\n  `;\n}","import { render } from 'lit-html';\nimport { CalendarEvent } from './components';\nimport { getLanguage, isSame } from './components/utils';\nimport { calendar } from './components/uikit-calendar';\n\nmain();\n\nfunction replaceInputs(input: HTMLInputElement) {\n  const target = useInput(input);\n  let value = input.valueAsDate || new Date();\n\n  const calendarTemplate = calendar({\n    onDaySelected: (e: Event, date: Date) => { value = date; setValue(input)(e, date); redraw(target)(e, date); },\n    onMonthChanged: redraw(target),\n    onYearChanged: redraw(target)\n  });\n\n  render(calendarTemplate(value, value), target);\n\n  function redraw(target: HTMLElement): CalendarEvent {\n    return (e: Event, date: Date) => {\n      e.stopPropagation();\n      render(calendarTemplate(date, value), target);\n    }\n  }\n}\n\nfunction useInput(element: HTMLInputElement) {\n  const wrapper = document.createElement('div');\n  element.setAttribute('hidden', '');\n  element.parentElement.insertBefore(wrapper, element);\n  return wrapper;\n}\n\nfunction getDateFormatter() {\n  const options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n  return new Intl.DateTimeFormat(getLanguage(), options);\n}\n\nfunction setValue(element: HTMLInputElement): CalendarEvent {\n  return (e, date) => {\n    e.stopPropagation();\n    const previous = element.valueAsDate;\n    const next = date;\n\n    if (!isSame(previous, next)) {\n      element.value = getDateFormatter().format(date);\n      element.dispatchEvent(new Event('change'));\n      element.dispatchEvent(new Event('input'));\n    }\n    \n    return date;\n  }\n}\n\nfunction main() {\n  document.querySelectorAll('[type=date]')\n    .forEach((input: HTMLInputElement) => replaceInputs(input))\n}\n"],"names":["directives","WeakMap","isDirective","o","has","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","render","firstChild","Object","assign","appendInto","getLanguage","navigator","languages","language","isSame","previous","next","getUTCFullYear","getUTCMonth","getUTCDate","__assign","arguments","p","prototype","hasOwnProperty","apply","__spreadArrays","il","r","k","a","j","jl","__makeTemplateObject","cooked","raw","defineProperty","ClassList","classes","Set","changed","classList","cls","add","delete","classString","forEach","previousClassesCache","classMap","f","classInfo","previousClasses","remove","args","d","recurseUntil","done","startDate","_i","previousDates","tomorrow","isEndOfCalendar","targetDate","date","isSunday","getUTCDay","firstOfMonth","Date","sundayOfWeek","addDays","days","dateClasses","uk-button","uk-button-default","uk-padding-remove-horizontal","gridClasses","uk-grid-small","uk-child-width-expand","uk-grid-row-collapse","uk-grid-column-collapse","calendar","events","onDatePicked","onMonthPicked","onYearPicked","dayPicker","onDaySelected","_a","_b","getDate","monthPicker","onMonthChanged","lastMonth","getFullYear","getMonth","nextMonth","formatter","Intl","DateTimeFormat","month","format","yearPicker","onYearChanged","lastYear","nextYear","year","currentDate","selectedDate","dates","getDayClasses","day","uk-button-primary","uk-button-secondary","uk-button-danger","dayClasses","reduce","weeks","floor","groupByWeek","map","querySelectorAll","input","wrapper","target","parentElement","valueAsDate","calendarTemplate","stopPropagation","dispatchEvent","Event","redraw","replaceInputs"],"mappings":"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"}